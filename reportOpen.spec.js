// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const firefox = require('selenium-webdriver/firefox');
const chrome = require('selenium-webdriver/chrome');
const proxy = require('selenium-webdriver/proxy')
const logging = require('selenium-webdriver/lib/logging')
const fs = require('fs');
const baseURL = fs.readFileSync('site').toString()
const token = fs.readFileSync('token').toString()
const reportID = fs.readFileSync('reportId').toString()
const username = fs.readFileSync('username').toString().trim()
const password = fs.readFileSync('password').toString().trim()

const screen = {
  width: 1440,
  height: 1080
};

describe('ReportOpen', function () {
  this.timeout(1200000)
  let driver
  let vars
  beforeEach(async function () {

    vars = {}
  })
  afterEach(async function () {
    await driver.quit();
  })
  it('ReportOpen', async function () {
    console.log("Building Driver")
    // var prefs = new logging.Preferences();
    // prefs.setLevel(logging.Type.BROWSER, logging.Level.ALL);
    // prefs.setLevel(logging.Type.DRIVER, logging.Level.ALL);
    driver = await new Builder()
      .withCapabilities(
        {
          acceptInsecureCerts: true,
          // loggingPrefs: prefs
        })
      .forBrowser('chrome')
      .setProxy(proxy.manual({
        httpProxy: 'www-proxy-hqdc.us.oracle.com:80',
        sslProxy: 'www-proxy-hqdc.us.oracle.com:80',
        ftpProxy: 'www-proxy-hqdc.us.oracle.com:80',
        socksProxy: 'www-proxy-hqdc.us.oracle.com:80',
        socksVersion: 5,
        noProxy: [".lan", "*.lan", "qa.lan", "*.qa.lan"]
      }))
      .setChromeOptions(new chrome.Options().headless().windowSize(screen))
      .build()
    console.log("Driver built")
    await driver.get(`${baseURL}/`)
    await driver.findElement(By.id("username")).click()
    await driver.findElement(By.id("username")).sendKeys(username)
    await driver.findElement(By.id("password")).click()
    await driver.findElement(By.id("password")).sendKeys(password)
    await driver.findElement(By.id("loginbutton")).click()
    console.log("Logged In")
    const reports = fs.readFileSync('reportId').toString().trim().split('\n')
    console.log(reports);
    for (var rId of reports) {
      console.log(`Saving ${rId}`);
      await saveReport(rId)
    }
    console.log("All reports fetched");
  })

  async function saveReport(reportID) {
    await driver.get(`${baseURL}/Bookmark/Report/${reportID}`)
    await driver.executeScript("window.scrollTo(0,0)")
    let fileName = reportID;
    try {
      await waitForElement(By.id(`datagrid_AC-${reportID}`))
    } catch {
      fileName = `${reportID}-failure`;
    }
    await screenshot(fileName);
    await driver.navigate().refresh();
  }

  async function screenshot(name) {
    const image = await driver.takeScreenshot()
    fs.writeFileSync(`${name}.png`, image, 'base64')
    console.log(`Saved ${name}.png`)
  }

  function sleep(ms) {
    return new Promise(resolve => {
      setTimeout(resolve, ms)
    })
  }

  async function waitForElement(selector) {
    return await driver.wait(async function () {
      let element
      try {
        element = await driver.findElement(selector)
        return element.isDisplayed().then(v => v ? element : null)
      } catch {
        element = null
      }
      return false
    }, 120000)
  }
})
